name: "Docker Image Create / Continuous Deployment"

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  #schedule:
  #  - cron: '28 10 * * *'
  push:
    branches:
      - main
      - development
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        secrets: |
          "BUILD_ID=${{ github.run_id }}"
  continuous_deployment_main:
    name: cd
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        key: ${{ secrets.KEY }}
        host: ${{ secrets.HOST }}
        port: ${{ secrets.PORT }}
        username: ${{ secrets.USERNAME }}
        script: |
          cd /opt/odot-cameras/odot-cameras
          docker-compose down && docker-compose pull && docker-compose up -d
  continuous_deployment_dev:
    name: cd
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        key: ${{ secrets.DEV_KEY }}
        host: ${{ secrets.DEV_HOST }}
        port: ${{ secrets.PORT }}
        username: ${{ secrets.DEV_USERNAME }}
        script: |
          cd /opt/odot-cameras/odot-cameras
          docker-compose down && docker-compose pull && docker-compose up -d
